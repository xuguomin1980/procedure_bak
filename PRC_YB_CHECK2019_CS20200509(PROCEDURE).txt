PRC_YB_CHECK2019_CS20200509	PROCEDURE	1	"procedure prc_yb_check2019_cs20200509(in_jiaoyilx    in varchar2, --交易类型
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	2	"                                                in_caozuogh    in varchar2, --操作工号
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	3	"                                                in_patient_no  in number, --住院病人序号 就诊序号 jzxh
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	4	"                                                in_yibao_jylsh in varchar2, --医保交易号
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	5	"                                                out_code       out INTEGER, -- 返回结果 0为执行成功
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	6	"                                                out_msg        out varchar2) is
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	7	"
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	8	"  --入参说明： in_jiaoyilx 交易类型 in_caozuogh 操作工号 in_patient_no 住院病人序号  in_yibao_jylsh 医保交易号 out_code 返回结果 out_msg 返回内容
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	9	"  --in_jylx 交易类型：
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	10	"
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	11	"  --住院病人序号
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	12	"  v_patient_no number;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	13	"
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	14	"  --医保住院病人序号
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	15	"  v_patient_no_yb varchar2(20);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	16	"
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	17	"  --就诊卡号
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	18	"  v_jzkh varchar2(30);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	19	"
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	20	"  v_ybjylsh varchar2(40);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	21	"  v_ywzqh   varchar2(40);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	22	"  --医保执行总次数
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	23	"  v_zxzcs number;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	24	"
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	25	"  --病人类别
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	26	"  v_brlb number;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	27	"  --结算标志
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	28	"  v_js_no     number;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	29	"  v_total_fee number;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	30	"  --预出院日期
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	31	"  v_preout_date varchar2(20);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	32	"  --病人性质
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	33	"  v_brxz             varchar2(20);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	34	"  v_icd10            varchar2(30);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	35	"  v_icd10_from       varchar2(30);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	36	"  v_data             varchar2(30);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	37	"  v_patient_no_zxzcs varchar2(30);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	38	"
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	39	"  --临时的统计的数量
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	40	"  v_count number;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	41	"  --操作工号
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	42	"  --v_caozuogh varchar2(20);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	43	"  --婴儿标志
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	44	"  v_infant_flag number;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	45	"  v_amount_date date;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	46	"
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	47	"  v_flag     varchar2(20);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	48	"  v_flag_len number;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	49	"  v_pos      number;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	50	"
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	51	"  v_sj_kz_time  varchar2(20);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	52	"  v_sj_kz_sl    number;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	53	"  v_sj_kz_time1 varchar2(20);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	54	"  v_sj_kz_time2 varchar2(20);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	55	"  v_sj_kz_time3 varchar2(20);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	56	"  v_temp        varchar2(20);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	57	"
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	58	"  v_icd10_name         varchar2(50);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	59	"  v_fphm               varchar2(30);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	60	"  v_fphm_next          varchar2(30);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	61	"  v_fphm_end           varchar2(30);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	62	"  v_kdsm               varchar2(30);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	63	"  v_msg                varchar2(200);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	64	"  v_data_max           varchar2(2000);
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	65	"  v_sl_kz              number;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	66	"  v_sl_use             number;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	67	"  v_sl_jbdm8           number;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	68	"  v_ylxh_ct_sum        number;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	69	"  v_ylxh_ct_sum_tcylxh number;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	70	"  v_ylxh_ct_sum_dj     number;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	71	"  v_sl_csrq            number;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	72	"  v_xb                 number;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	73	"  v_sqlcode_sum        number;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	74	"  --定义变量
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	75	"
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	76	"  v_fygl             zy_detail_charge.fygl%TYPE;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	77	"  v_je               zy_detail_charge.dj%TYPE;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	78	"  v_je_zf            zy_detail_charge.dj%TYPE;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	79	"  v_hlh              zy_fp_fee.hlh%type;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	80	"  v_zy_total_fee     zy_total_fee%rowtype;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	81	"  v_zy_detail_charge zy_detail_charge%rowtype;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	82	"  --定义游标
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	83	"  -- CURSOR zy_detail_charge_fygl_cursor(v_patient_no_in number) is
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	84	"  -- select  fygl,sum(dj*sl),sum(dj*sl* nvl(self_percent,0)) From zy_detail_charge    where patient_no=v_patient_no_in  group by fygl ;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	85	"
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	86	"begin
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	87	"  v_jzkh := '';
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	88	"
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	89	"  if length(in_patient_no) < 1 then
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	90	"    out_code := -1;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	91	"    out_msg  := '就诊序号不能为空';
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	92	"    return;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	93	"  else
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	94	"  
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	95	"    begin
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	96	"    
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	97	"      select jzkh
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	98	"        into v_jzkh
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	99	"        from zj_jzxx
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	100	"       where jzxh = in_patient_no
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	101	"         and rownum = 1;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	102	"    
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	103	"    EXCEPTION
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	104	"      WHEN NO_DATA_FOUND THEN
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	105	"        out_code := -1;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	106	"        out_msg  := '就诊序号不能为空';
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	107	"        return;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	108	"      
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	109	"    end;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	110	"  
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	111	"  end if;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	112	"  if length(v_jzkh) > 0 then
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	113	"    out_msg := '';
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	114	"  else
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	115	"    out_code := -1;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	116	"    out_msg  := '就诊序号对应的就诊卡号不能为空';
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	117	"    return;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	118	"  end if;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	119	"
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	120	"  --30991
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	121	"  --新型冠状病毒核酸检测
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	122	"  --2010040，2020002
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	123	"
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	124	"  --'发热新冠病毒核酸检测收费  限制发热门诊  
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	125	"  if 0 = 0 then
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	126	"    v_count := 0;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	127	"    select count(*)
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	128	"      into v_count
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	129	"      from yj_Yjk1 a, yj_yjk2 b, gy_brjbxxk c
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	130	"     where a.yjsb = b.yjsb
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	131	"       and a.jzkh = c.jzkh
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	132	"       and a.sjksdm not in ('2010040')
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	133	"       and b.ylxh in (31041)
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	134	"       and a.sfsb is null
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	135	"       and a.jzxh = in_patient_no;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	136	"    if v_count > 0 then
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	137	"    
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	138	"      out_code := -1;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	139	"      out_msg  := '发热新冠病毒核酸检测收费 仅限 指定科室 开单';
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	140	"      return;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	141	"    end if;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	142	"  
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	143	"  end if;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	144	"
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	145	"  --严重急性呼吸综合症冠状病毒抗体检测(发热) 仅限 指定科室 开单
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	146	"  if 1 = 1 then
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	147	"    v_count := 0;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	148	"    select count(*)
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	149	"      into v_count
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	150	"      from yj_Yjk1 a, yj_yjk2 b, gy_brjbxxk c
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	151	"     where a.yjsb = b.yjsb
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	152	"       and a.jzkh = c.jzkh
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	153	"       and a.sjksdm in ('2010040', '2100005', '2270006')
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	154	"       and b.tcylxh in (21897)
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	155	"       and a.sfsb is null
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	156	"       and a.jzxh = in_patient_no;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	157	"    if v_count > 0 then
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	158	"    
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	159	"      out_code := -1;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	160	"      out_msg  := '发热门诊请开 严重急性呼吸综合症冠状病毒抗体检测(发热) ';
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	161	"      return;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	162	"    end if;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	163	"  
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	164	"  end if;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	165	"
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	166	"  --严重急性呼吸综合症冠状病毒抗体检测(发热) 仅限 指定科室 开单
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	167	"  if 1 = 1 then
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	168	"    v_count := 0;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	169	"    select count(*)
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	170	"      into v_count
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	171	"      from yj_Yjk1 a, yj_yjk2 b, gy_brjbxxk c
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	172	"     where a.yjsb = b.yjsb
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	173	"       and a.jzkh = c.jzkh
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	174	"       and a.sjksdm not in ('2010040', '2100005', '2270006')
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	175	"       and b.tcylxh in (31524)
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	176	"       and a.sfsb is null
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	177	"       and a.jzxh = in_patient_no;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	178	"    if v_count > 0 then
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	179	"    
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	180	"      out_code := -1;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	181	"      out_msg  := '严重急性呼吸综合症冠状病毒抗体检测(发热) 仅限 指定科室 开单';
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	182	"      return;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	183	"    end if;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	184	"  
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	185	"  end if;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	186	"
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	187	"  out_code := 0;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	188	"  out_msg  := '';
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	189	"  return;
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	190	"
"
PRC_YB_CHECK2019_CS20200509	PROCEDURE	191	"end;
"
