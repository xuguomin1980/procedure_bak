YK_FPHMCX_MC	PROCEDURE	1	"PROCEDURE         ""YK_FPHMCX_MC"" (
"
YK_FPHMCX_MC	PROCEDURE	2	"        P_XTXH   IN NUMBER,
"
YK_FPHMCX_MC	PROCEDURE	3	"        P_YPXH   IN NUMBER,
"
YK_FPHMCX_MC	PROCEDURE	4	"        P_YPCDDM IN NUMBER,
"
YK_FPHMCX_MC	PROCEDURE	5	"        P_RQ1	 IN CHAR,
"
YK_FPHMCX_MC	PROCEDURE	6	"        P_RQ2    IN CHAR) IS
"
YK_FPHMCX_MC	PROCEDURE	7	"BEGIN
"
YK_FPHMCX_MC	PROCEDURE	8	"DECLARE
"
YK_FPHMCX_MC	PROCEDURE	9	"        V_RKDH    CHAR(8);
"
YK_FPHMCX_MC	PROCEDURE	10	"        V_FPHM    VARCHAR2(10);
"
YK_FPHMCX_MC	PROCEDURE	11	"        V_JZRD    DATE;
"
YK_FPHMCX_MC	PROCEDURE	12	"        V_PFJ     NUMBER(16,6);
"
YK_FPHMCX_MC	PROCEDURE	13	"        V_JJ      NUMBER(16,6);
"
YK_FPHMCX_MC	PROCEDURE	14	"        V_LSJ     NUMBER(16,6);
"
YK_FPHMCX_MC	PROCEDURE	15	"        V_RKSL    NUMBER(16,6);
"
YK_FPHMCX_MC	PROCEDURE	16	"        V_CRKFSDM NUMBER(2);
"
YK_FPHMCX_MC	PROCEDURE	17	"        V_KL      NUMBER(4,2);
"
YK_FPHMCX_MC	PROCEDURE	18	"        V_ZBLB    NUMBER(2);
"
YK_FPHMCX_MC	PROCEDURE	19	"        V_JGXH    NUMBER;
"
YK_FPHMCX_MC	PROCEDURE	20	"
"
YK_FPHMCX_MC	PROCEDURE	21	"CURSOR CUR_FPHMCX_MC IS 
"
YK_FPHMCX_MC	PROCEDURE	22	"     SELECT A.CRKFSDM,A.RKDH,A.FPHM,B.JZRQ,A.PFJ,A.JJ,A.LSJ,A.RKSL,A.KL,A.ZBLB,A.JGXH FROM YK_YPRKDMX A ,YK_YPRKD B
"
YK_FPHMCX_MC	PROCEDURE	23	"     WHERE A.YPXH=P_YPXH AND A.YPCDDM=P_YPCDDM AND A.XTXH=P_XTXH AND B.XTXH=A.XTXH
"
YK_FPHMCX_MC	PROCEDURE	24	"           AND B.RKDH=A.RKDH AND A.CRKFSDM=B.CRKFSDM AND B.JZRQ>=TO_DATE(P_RQ1,'YYYY-MM-DD') 
"
YK_FPHMCX_MC	PROCEDURE	25	"           AND B.JZRQ <TO_DATE(P_RQ2,'YYYY-MM-DD') AND A.YDZBZ = 1;
"
YK_FPHMCX_MC	PROCEDURE	26	"
"
YK_FPHMCX_MC	PROCEDURE	27	"BEGIN
"
YK_FPHMCX_MC	PROCEDURE	28	"DELETE FROM YK_FPHMCX_TEMP WHERE XTXH = P_XTXH;
"
YK_FPHMCX_MC	PROCEDURE	29	"   BEGIN 
"
YK_FPHMCX_MC	PROCEDURE	30	"        OPEN CUR_FPHMCX_MC;
"
YK_FPHMCX_MC	PROCEDURE	31	"	LOOP
"
YK_FPHMCX_MC	PROCEDURE	32	"	      FETCH CUR_FPHMCX_MC INTO  V_CRKFSDM, V_RKDH,V_FPHM,V_JZRD,V_PFJ,V_JJ,V_LSJ,V_RKSL,V_KL,V_ZBLB,V_JGXH;
"
YK_FPHMCX_MC	PROCEDURE	33	"	      EXIT WHEN CUR_FPHMCX_MC%NOTFOUND;
"
YK_FPHMCX_MC	PROCEDURE	34	"--         IF V_FPHM IS NOT NULL THEN
"
YK_FPHMCX_MC	PROCEDURE	35	"             INSERT INTO YK_FPHMCX_TEMP(XTXH,JGXH,YPXH,YPCDDM,FPHM,RKDH,CRKFSDM,JZRQ,RKSL,JJ,PFJ,LSJ,KL,ZBLB)
"
YK_FPHMCX_MC	PROCEDURE	36	"             VALUES(P_XTXH,V_JGXH,P_YPXH,P_YPCDDM,V_FPHM, V_RKDH,V_CRKFSDM,V_JZRD,V_RKSL,V_JJ,V_PFJ,V_LSJ,V_KL,V_ZBLB);      
"
YK_FPHMCX_MC	PROCEDURE	37	"--         END IF ;
"
YK_FPHMCX_MC	PROCEDURE	38	"        END LOOP;
"
YK_FPHMCX_MC	PROCEDURE	39	"   END;
"
YK_FPHMCX_MC	PROCEDURE	40	"
"
YK_FPHMCX_MC	PROCEDURE	41	"
"
YK_FPHMCX_MC	PROCEDURE	42	"EXCEPTION  -- exception handlers begin
"
YK_FPHMCX_MC	PROCEDURE	43	"   WHEN OTHERS THEN  -- handles all other errors
"
YK_FPHMCX_MC	PROCEDURE	44	"        ROLLBACK;
"
YK_FPHMCX_MC	PROCEDURE	45	"	RAISE_APPLICATION_ERROR(-20103,'YK_FPHMCX_MC FAILS');
"
YK_FPHMCX_MC	PROCEDURE	46	"END;
"
YK_FPHMCX_MC	PROCEDURE	47	"END;
"
YK_FPHMCX_MC	PROCEDURE	48	"
"
YK_FPHMCX_MC	PROCEDURE	49	"
"
YK_FPHMCX_MC	PROCEDURE	50	"
"
YK_FPHMCX_MC	PROCEDURE	51	 
