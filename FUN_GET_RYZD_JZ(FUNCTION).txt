FUN_GET_RYZD_JZ	FUNCTION	1	"FUNCTION FUN_GET_RYZD_JZ(PRM_BRXH IN NUMBER) RETURN VARCHAR2 IS
"
FUN_GET_RYZD_JZ	FUNCTION	2	"  RESULT VARCHAR2(500);
"
FUN_GET_RYZD_JZ	FUNCTION	3	"BEGIN
"
FUN_GET_RYZD_JZ	FUNCTION	4	"  DECLARE
"
FUN_GET_RYZD_JZ	FUNCTION	5	"    STR_RYZD BL_BINGRENZDQK.JBMC%TYPE;
"
FUN_GET_RYZD_JZ	FUNCTION	6	"    CURSOR CUR_RYZD IS
"
FUN_GET_RYZD_JZ	FUNCTION	7	"      SELECT decode(xiuzhenzdmc,null,nvl(zhenduanqz,'')||JBMC||nvl(zhenduanhz,''),nvl(xiuzhenzdqz,'')||xiuzhenzdmc ||nvl(xiuzhenzdhz,''))
"
FUN_GET_RYZD_JZ	FUNCTION	8	"        FROM BL_BINGRENZDQK
"
FUN_GET_RYZD_JZ	FUNCTION	9	"       WHERE BRXH = PRM_BRXH
"
FUN_GET_RYZD_JZ	FUNCTION	10	"         AND (ZDLB = 2 OR ZDLB = 12)
"
FUN_GET_RYZD_JZ	FUNCTION	11	"       ORDER BY ZDLB,ZDJC,sxh;
"
FUN_GET_RYZD_JZ	FUNCTION	12	"  BEGIN
"
FUN_GET_RYZD_JZ	FUNCTION	13	"    RESULT   := '';
"
FUN_GET_RYZD_JZ	FUNCTION	14	"    STR_RYZD := '';
"
FUN_GET_RYZD_JZ	FUNCTION	15	"    IF PRM_BRXH IS NULL THEN
"
FUN_GET_RYZD_JZ	FUNCTION	16	"      RESULT := '';
"
FUN_GET_RYZD_JZ	FUNCTION	17	"    ELSE
"
FUN_GET_RYZD_JZ	FUNCTION	18	"      OPEN CUR_RYZD;
"
FUN_GET_RYZD_JZ	FUNCTION	19	"      LOOP
"
FUN_GET_RYZD_JZ	FUNCTION	20	"        FETCH CUR_RYZD
"
FUN_GET_RYZD_JZ	FUNCTION	21	"          INTO STR_RYZD;
"
FUN_GET_RYZD_JZ	FUNCTION	22	"        EXIT WHEN CUR_RYZD%NOTFOUND;
"
FUN_GET_RYZD_JZ	FUNCTION	23	"        IF RESULT = '' OR RESULT IS NULL THEN
"
FUN_GET_RYZD_JZ	FUNCTION	24	"          RESULT := STR_RYZD;
"
FUN_GET_RYZD_JZ	FUNCTION	25	"        ELSE
"
FUN_GET_RYZD_JZ	FUNCTION	26	"          RESULT := result || ',' || STR_RYZD;
"
FUN_GET_RYZD_JZ	FUNCTION	27	"        END IF;
"
FUN_GET_RYZD_JZ	FUNCTION	28	"      END LOOP;
"
FUN_GET_RYZD_JZ	FUNCTION	29	"      CLOSE CUR_RYZD;
"
FUN_GET_RYZD_JZ	FUNCTION	30	"    END IF;
"
FUN_GET_RYZD_JZ	FUNCTION	31	"  END;
"
FUN_GET_RYZD_JZ	FUNCTION	32	"  RETURN(RESULT);
"
FUN_GET_RYZD_JZ	FUNCTION	33	"END FUN_GET_RYZD_JZ;
"
